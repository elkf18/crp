require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")
require File.join(File.dirname(`node --print "require.resolve('react-native-unimodules/package.json')"`), "cocoapods")

platform :ios, '11.0'

target 'jokopi' do
  use_unimodules!
  # use_frameworks!
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"])

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  #use_flipper!
  #use_flipper!({'Flipper' => '0.79.0'})
  # use_flipper!({ 'Flipper-Folly' => '2.4.0' })
   use_flipper!({ 'Flipper' => '0.54.0' ,'Flipper-Folly' => '2.2' })
  # use_flipper!({ 'Flipper' => '0.54.0' })
  # pod 'lottie-react-native', :path => '../node_modules/lottie-react-native'

  # pod 'lottie-ios', :path => '../node_modules/lottie-ios'

  #pod 'RCTSelectContact', :path => '../node_modules/react-native-select-contact'
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  # pod 'FirebaseCore', :git => 'https://github.com/firebase/firebase-ios-sdk.git', :branch => 'master'
  # pod 'FirebaseFirestore', :git => 'https://github.com/firebase/firebase-ios-sdk.git', :branch => 'master'

  # post_install do |installer|
  #  # flipper_post_install(installer)
  #   installer.pods_project.targets.each do |target|
  #     target.build_configurations.each do |config|
  #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0';
  #     config.build_settings["ONLY_ACTIVE_ARCH"] = "NO";
  #     end
  #   end
  # end


  post_install do |installer|


     installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
        config.build_settings["ONLY_ACTIVE_ARCH"] = "YES"
      end
      case target.name
      when 'RCT-Folly'
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        end
      end
    end

    installer.pods_project.build_configurations.each do |config|     
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"   
    end
    flipper_post_install(installer)
  
    # ## Fix for Flipper-Folly on iOS 14.5
    find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
      "atomic_notify_one(state)", "folly::atomic_notify_one(state)")
  
    find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
      "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")
  end

  # if !ENV['CI']
  #   # use_flipper!ÃŸ
  #   post_install do |installer|
  #     # flipper_post_install(installer)
  #     installer.pods_project.build_configurations.each do |config|
  #       config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  #     end
  #   end
  # end
end


def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)
      if text != replace
          puts "Fix: " + name
          File.open(name, "w") { |file| file.puts replace }
          STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end